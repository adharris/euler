

import click

from math import sqrt
from itertools import count

@click.command('44')
@click.option('--verbose', '-v', count=True)
def problem_044(verbose):
    """Pentagon numbers.

    Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first
    ten pentagonal numbers are:
    
    1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
    
    It can be seen that P4 \+ P7 = 22 + 70 = 92 = P8. However, their
    difference, 70 − 22 = 48, is not pentagonal.
    
    Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
    difference are pentagonal and D = |Pk − Pj| is minimised; what is the
    value of D?
    
    """

    generated = []

    for pent_1 in generate_pentagon():
        for pent_2 in reversed(generated):
            if is_pentagonal(pent_1 - pent_2) and is_pentagonal(pent_1 + pent_2):
                print(pent_1, pent_2, pent_1 - pent_2)
                return
        generated.append(pent_1)


def generate_pentagon():
    return (pentagon(n) for n in count(1))


def pentagon(n):
    return (n * (3 * n - 1)) // 2


def is_pentagonal(p):
    # Via quadratic:
    n = (1 + sqrt(1 + 24 * p )) / 6
    return int(n) == n
